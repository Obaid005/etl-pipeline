version: '3.8'

services:
  mongodb:
    image: mongo:latest
    platform: linux/arm64
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    command: ["--replSet", "rs0", "--bind_ip_all"]
    hostname: mongodb
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=etl-pipeline

  mongo-init:
    image: mongo:latest
    platform: linux/arm64
    restart: "no"
    depends_on:
      - mongodb
    command: >
      bash -c "
      sleep 10 &&
      mongosh --host mongodb:27017 --eval '
        rs.initiate({
          _id: \"rs0\", 
          members: [{ _id: 0, host: \"mongodb:27017\", priority: 1 }]
        });
      ' &&
      sleep 5 &&
      mongosh --host mongodb:27017 --eval '
        db = db.getSiblingDB(\"etl-pipeline\");
        db.createCollection(\"orders\");
        db.createCollection(\"devices\");
        db.createCollection(\"useractivities\");
      '
      "

  rabbitmq:
    image: rabbitmq:3-management
    platform: linux/arm64
    container_name: rabbitmq
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: etl-pipeline
    ports:
      - "3000:3000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/etl-pipeline?replicaSet=rs0
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    volumes:
      - ./data:/app/data
    depends_on:
      - mongodb
      - rabbitmq
    restart: on-failure

volumes:
  mongodb_data:
  rabbitmq_data: 